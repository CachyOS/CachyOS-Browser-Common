diff -ru firefox-102.0.1/toolkit/components/remote/moz.build firefox-102.0.1-x/toolkit/components/remote/moz.build
--- firefox-102.0.1/toolkit/components/remote/moz.build	2022-07-05 14:21:22.000000000 +0200
+++ firefox-102.0.1-x/toolkit/components/remote/moz.build	2022-07-31 15:35:33.318998511 +0200
@@ -26,6 +26,13 @@
             "nsUnixRemoteServer.h",
             "RemoteUtils.h",
         ]
+    elif CONFIG["MOZ_WAYLAND"]:
+        # TODO: replace `pass` with source files for an eventual Wayland implementation
+        # SOURCES += [
+        #   "nsWLRemoteServer.cpp",
+        #   "nsWLRemoteClient.cpp",
+        # ]
+        pass
     else:
         SOURCES += [
             "nsGTKRemoteServer.cpp",
diff -ru firefox-102.0.1/toolkit/components/remote/nsRemoteService.cpp firefox-102.0.1-x/toolkit/components/remote/nsRemoteService.cpp
--- firefox-102.0.1/toolkit/components/remote/nsRemoteService.cpp	2022-07-05 14:33:20.000000000 +0200
+++ firefox-102.0.1-x/toolkit/components/remote/nsRemoteService.cpp	2022-07-31 15:42:55.109996825 +0200
@@ -10,6 +10,12 @@
 #  ifdef MOZ_ENABLE_DBUS
 #    include "nsDBusRemoteServer.h"
 #    include "nsDBusRemoteClient.h"
+#  elif defined(MOZ_WAYLAND)
+// TODO: replace generic client header include line
+// by relevant inlcudes for a Wayland implementation
+// #    include "nsWLRemoteServer.h"
+// #    include "nsWLRemoteClient.h"
+#    include "nsRemoteClient.h"
 #  else
 #    include "nsGTKRemoteServer.h"
 #    include "nsXRemoteClient.h"
@@ -95,6 +101,10 @@
 #ifdef MOZ_WIDGET_GTK
 #  if defined(MOZ_ENABLE_DBUS)
   client = MakeUnique<nsDBusRemoteClient>();
+#  elif defined(MOZ_WAYLAND)
+  // TODO: replace return statement by Wayland client implementation
+  // client = MakeUnique<nsWLRemoteClient>();
+  return REMOTE_NOT_FOUND;
 #  else
   client = MakeUnique<nsXRemoteClient>();
 #  endif
@@ -139,6 +149,10 @@
 #ifdef MOZ_WIDGET_GTK
 #  if defined(MOZ_ENABLE_DBUS)
   mRemoteServer = MakeUnique<nsDBusRemoteServer>();
+#  elif defined(MOZ_WAYLAND)
+  // TODO: replace return statement by Wayland server implementation
+  // mRemoteServer = MakeUnique<nsWLRemoteServer>();
+  return;
 #  else
   mRemoteServer = MakeUnique<nsGTKRemoteServer>();
 #  endif
